package heapsort;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;

/**
 *
 * @author Patrick Robinson, Nick Herrmannsd√∂rfer, Erwin Stamm
 */
public class ArrayView extends javax.swing.JPanel {
    /**
     * Creates new form ArrayView
     */
    public ArrayView() {
        initComponents();
        this.setDoubleBuffered(true);
    }
    public int counterFinish = 0;
    public int firstIndex = -1;
    public int secondIndex = -1;
    public int[] arState;
    public int max;
    public boolean bool;
    public Color firstC;
    public Color secondC;

    @Override
    public void paint(Graphics g) {
        Graphics2D g2 = (Graphics2D) g;
        g2.setRenderingHint(RenderingHints.KEY_ALPHA_INTERPOLATION, RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY);
        g2.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
        g2.setColor(Color.white);
        g2.clearRect(0, 0, this.getWidth(), this.getHeight());

        if(arState != null) {
            double widthRect = this.getWidth() * 1.0 / (2 * arState.length);
            double tmpWidth = widthRect;
            double tmpHeight = (this.getHeight() * 1.0 - 10) / max;
            for(int i = 0; i < arState.length; i++) {
                if(i == firstIndex) {
                    g2.setColor(firstC);
                } else if(i == secondIndex) {
                    g2.setColor(secondC);
                } else {
                    g2.setColor(Color.black);
                }
                if(i >= arState.length - counterFinish) {
                    g2.setColor(Color.darkGray);
                }

                int zahl = arState[i];
                if(g2.getColor() != Color.black) {
                    g2.fillRect((int)Math.floor(tmpWidth), (int)Math.floor(this.getHeight() - 10 - tmpHeight * zahl),
                            (int)Math.floor(widthRect), (int)Math.floor(tmpHeight * zahl));
                } else {
                    g2.drawRect((int)Math.floor(tmpWidth), (int)Math.floor(this.getHeight() - 10 - tmpHeight * zahl),
                            (int)Math.floor(widthRect), (int)Math.floor(tmpHeight * zahl));
                }

                tmpWidth += 2 * widthRect;
            }
        }
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
