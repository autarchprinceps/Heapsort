package heapsort;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Patrick Robinson, Nick Herrmannsd√∂rfer, Erwin Stamm
 */
public class GUI extends javax.swing.JFrame {
    public GUI() {
        initComponents();
        heapView1.adjacentArrayView = rectPanel;
    }

    Heapsort h;
    ArrayList<Command> com;
    Wrap pos;
    int maxValue;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sizeField = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        heapView1 = new heapsort.HeapView();
        rectPanel = new heapsort.ArrayView();
        forwardBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jButton2.setText("Step");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Start");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Stop");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout heapView1Layout = new javax.swing.GroupLayout(heapView1);
        heapView1.setLayout(heapView1Layout);
        heapView1Layout.setHorizontalGroup(
            heapView1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        heapView1Layout.setVerticalGroup(
            heapView1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 219, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout rectPanelLayout = new javax.swing.GroupLayout(rectPanel);
        rectPanel.setLayout(rectPanelLayout);
        rectPanelLayout.setHorizontalGroup(
            rectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        rectPanelLayout.setVerticalGroup(
            rectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 238, Short.MAX_VALUE)
        );

        forwardBox.setSelected(true);
        forwardBox.setText("Forward");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rectPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(heapView1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(sizeField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(submitButton)
                        .addGap(18, 18, 18)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(forwardBox)
                        .addGap(0, 143, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton4)
                        .addComponent(jButton5)
                        .addComponent(forwardBox))
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sizeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(submitButton)))
                .addGap(18, 18, 18)
                .addComponent(rectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(heapView1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        run = null;
        pos = new Wrap();
        running = false;
        once = false;
        h = new Heapsort(Integer.parseInt(sizeField.getText()), false);
        if(jSlider1.getValue() < 98) {
            heapView1.wait = 1000 - (jSlider1.getValue() * 10);
        } else {
            heapView1.wait = 50;
        }
        com = h.sort();
        maxValue = h.content[h.content.length - 1];
        heapView1.maxValue = maxValue;
        heapView1.finished = 0;
        heapView1.adjacentArrayView.counterFinish = 0;
        rectPanel.max = maxValue;
        pos.setI(0);
        if(pos.getI() == 0) {
            heapView1.sendToAnimation(com.get(pos.getI()), null, pos, forwardBox.isSelected());
        } else {
            heapView1.sendToAnimation(com.get(pos.getI()), com.get(pos.getI() - 1), pos, forwardBox.isSelected());
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        if(jSlider1.getValue() < 98) {
            heapView1.wait = 1000 - (jSlider1.getValue() * 10);
        } else {
            heapView1.wait = 50;
        }
    }//GEN-LAST:event_jSlider1StateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         if(run == null) {
            run = new Thread() {
                @Override
                public void run() {
                    while(pos.getI() < com.size()) {
                        if(running) {
                            if(pos.getI() == 0) {
                                heapView1.sendToAnimation(com.get(pos.getI()), null, pos, forwardBox.isSelected());
                            } else {
                                heapView1.sendToAnimation(com.get(pos.getI()), com.get(pos.getI() - 1), pos, forwardBox.isSelected());
                            }
                            if(once) {
                                once = false;
                                running = false;
                            }
                        } else {
                            try {
                                Thread.sleep(100);
                            } catch(InterruptedException ex) {
                                Logger.getLogger(GUI.class.getName()).log(Level.WARNING, null, ex);
                            }
                        }
                    }
                }
            };
            once = true;
            running = true;
            run.start();
        } else {
            once = true;
            running = true;
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    Thread run;
    boolean running = false;
    boolean once = false;
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(run == null) {
            run = new Thread() {
                @Override
                public void run() {
                    while(pos.getI() < com.size()) {
                        if(running) {
                            if(pos.getI() == 0) {
                                heapView1.sendToAnimation(com.get(pos.getI()), null, pos, forwardBox.isSelected());
                            } else {
                                heapView1.sendToAnimation(com.get(pos.getI()), com.get(pos.getI() - 1), pos, forwardBox.isSelected());
                            }
                            if(once) {
                                once = false;
                                running = false;
                            }
                        } else {
                            try {
                                Thread.sleep(100);
                            } catch(InterruptedException ex) {
                                Logger.getLogger(GUI.class.getName()).log(Level.WARNING, null, ex);
                            }
                        }
                    }
                }
            };
            running = true;
            run.start();
        } else {
            running = true;
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        running = false;
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox forwardBox;
    private heapsort.HeapView heapView1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JSlider jSlider1;
    private heapsort.ArrayView rectPanel;
    private javax.swing.JTextField sizeField;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
}
